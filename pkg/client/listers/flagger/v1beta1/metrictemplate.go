/*
Copyright 2020 The Flux authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	flaggerv1beta1 "github.com/fluxcd/flagger/pkg/apis/flagger/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// MetricTemplateLister helps list MetricTemplates.
// All objects returned here must be treated as read-only.
type MetricTemplateLister interface {
	// List lists all MetricTemplates in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*flaggerv1beta1.MetricTemplate, err error)
	// MetricTemplates returns an object that can list and get MetricTemplates.
	MetricTemplates(namespace string) MetricTemplateNamespaceLister
	MetricTemplateListerExpansion
}

// metricTemplateLister implements the MetricTemplateLister interface.
type metricTemplateLister struct {
	listers.ResourceIndexer[*flaggerv1beta1.MetricTemplate]
}

// NewMetricTemplateLister returns a new MetricTemplateLister.
func NewMetricTemplateLister(indexer cache.Indexer) MetricTemplateLister {
	return &metricTemplateLister{listers.New[*flaggerv1beta1.MetricTemplate](indexer, flaggerv1beta1.Resource("metrictemplate"))}
}

// MetricTemplates returns an object that can list and get MetricTemplates.
func (s *metricTemplateLister) MetricTemplates(namespace string) MetricTemplateNamespaceLister {
	return metricTemplateNamespaceLister{listers.NewNamespaced[*flaggerv1beta1.MetricTemplate](s.ResourceIndexer, namespace)}
}

// MetricTemplateNamespaceLister helps list and get MetricTemplates.
// All objects returned here must be treated as read-only.
type MetricTemplateNamespaceLister interface {
	// List lists all MetricTemplates in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*flaggerv1beta1.MetricTemplate, err error)
	// Get retrieves the MetricTemplate from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*flaggerv1beta1.MetricTemplate, error)
	MetricTemplateNamespaceListerExpansion
}

// metricTemplateNamespaceLister implements the MetricTemplateNamespaceLister
// interface.
type metricTemplateNamespaceLister struct {
	listers.ResourceIndexer[*flaggerv1beta1.MetricTemplate]
}
