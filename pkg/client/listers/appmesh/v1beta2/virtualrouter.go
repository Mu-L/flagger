/*
Copyright 2020 The Flux authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta2

import (
	appmeshv1beta2 "github.com/fluxcd/flagger/pkg/apis/appmesh/v1beta2"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// VirtualRouterLister helps list VirtualRouters.
// All objects returned here must be treated as read-only.
type VirtualRouterLister interface {
	// List lists all VirtualRouters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*appmeshv1beta2.VirtualRouter, err error)
	// VirtualRouters returns an object that can list and get VirtualRouters.
	VirtualRouters(namespace string) VirtualRouterNamespaceLister
	VirtualRouterListerExpansion
}

// virtualRouterLister implements the VirtualRouterLister interface.
type virtualRouterLister struct {
	listers.ResourceIndexer[*appmeshv1beta2.VirtualRouter]
}

// NewVirtualRouterLister returns a new VirtualRouterLister.
func NewVirtualRouterLister(indexer cache.Indexer) VirtualRouterLister {
	return &virtualRouterLister{listers.New[*appmeshv1beta2.VirtualRouter](indexer, appmeshv1beta2.Resource("virtualrouter"))}
}

// VirtualRouters returns an object that can list and get VirtualRouters.
func (s *virtualRouterLister) VirtualRouters(namespace string) VirtualRouterNamespaceLister {
	return virtualRouterNamespaceLister{listers.NewNamespaced[*appmeshv1beta2.VirtualRouter](s.ResourceIndexer, namespace)}
}

// VirtualRouterNamespaceLister helps list and get VirtualRouters.
// All objects returned here must be treated as read-only.
type VirtualRouterNamespaceLister interface {
	// List lists all VirtualRouters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*appmeshv1beta2.VirtualRouter, err error)
	// Get retrieves the VirtualRouter from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*appmeshv1beta2.VirtualRouter, error)
	VirtualRouterNamespaceListerExpansion
}

// virtualRouterNamespaceLister implements the VirtualRouterNamespaceLister
// interface.
type virtualRouterNamespaceLister struct {
	listers.ResourceIndexer[*appmeshv1beta2.VirtualRouter]
}
